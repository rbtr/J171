Evan Baker
CSC171
LAB TR 0940-1055
TA Stephen Cohen
PROJECT01

Assignment description: In this assignment, I implemented a basic game of BlackJack.
Objects in this package: (bottom up)
Suits (an enum of suits)
Card
Deck
Hand
BlackJackPlayer
Dealer
BlackJack
PlayGame


Instructions to complile and run.
Buildscripts have been provided and just need to be run:
(in the project directory)
$ ./build.sh
or the Windows equivalent.

To run the game, a runscript has been provided:
$ ./run.sh
or the Windows equivalent.

To execute the test methods:
$ ./test.sh
or the Windows equivalent.

These scripts can be examined for specific implementation details. Everything is packaged so the buildscript is the easiest way to compile, test, and run.

**BONUS**
I implemented a basic player AI and query the user for the total number of players they want in the game, then add sufficient AIs.
Suits are in an enum since they should be unique and final.
The Deck is a singleton, because there should only every be a single deck instance in a game. *HOWEVER* there is no safeguard against drawing too many cards and if the deck goes empty, the game will exit. Since adding multiple players was not in the project description, that was not fully built so care must be taken to not add too many players.
The Deck also shuffles with Collections.shuffle() to ensure (psuedo) randomness. It is initially generated by looping through the suits and adding all cards in order. 
Everything is packaged, and Test_ classes are organized according to accepted good style - source in their own directory but compiled into the same package. Test_ classes import main classes as necessary.